trigger: none

name: Write-File

parameters:
  - name: Environment
    displayName: Environment
    default: 'IST'
    type: string
    values:
    - DEV
    - IST
    - PRD

  - name: AppName
    displayName: Application Name
    default: ''

  - name: AppID
    displayName: Application ID (Mandatory for update)
    default: 'null'

  - name: AppType
    displayName: Application Type
    default: 'SAML'
    type: string
    values:
    - SAML
    - OIDC

  - name: EntityID
    displayName: Application entity ID or Identifier URI (identifierUris)
    default: 'https://'
    type: string


variables:
  - name: stepSucceed
    value: false
  - name: AppStagingFolderPath
    value: "./EntraID/Applications-ADO/${{parameters.Environment}}/Staging/"
  - name: templateFolderPath
    value: "./EntraID/Applications-ADO/${{parameters.Environment}}/Staging/Templates"
  - name: SAMLappTemplateName
    value: "SAML_App_Template.json"
  - name: OIDCapptemplateName
    value: "OIDC_App_Template.json"    
  - group: ${{parameters.Environment}}-Variables
  - group: ${{parameters.Environment}}-Secrets
  - name: tenantIDvar
    value: $[variables.tenantID]

pool:
  vmImage: 'windows-latest'

jobs:
- job: writeSecretandCommit
  displayName: writing secret to local repo
  pool:
    vmImage: 'windows-latest'

  steps:
  - checkout: self
    persistCredentials: true
  - task: PowerShell@2
    name: createTemplates
    inputs:
      targetType: 'inline'
      script: |
        if ( "${{parameters.AppType}}" -eq "SAML" ){
          $templatefileObj = Get-content -Path $(templateFolderPath)/$(SAMLappTemplateName) -RAW | ConvertFrom-Json
          $templatefileObj| ConvertTo-Json -Depth 20  
        }else{
          $templatefileObj = Get-content -Path $(templateFolderPath)/$(OIDCappTemplateName) -RAW | ConvertFrom-Json
          $templatefileObj| ConvertTo-Json -Depth 20  

        }

  - script: echo Task 2 filename - $(fileName)
    name: echoOutput
  - script: |
     git config --global user.email "entraidProject@azuredevops.com"
     git config --global user.name "serivce account"
     cd $(Build.SourcesDirectory)\$(System.TeamProject)
     git add -A
     git commit -m "new"
     git push origin HEAD:$(Build.SourceBranchName)
    name: gitCommit
  - checkout: self
    clean: true
#git branch --all